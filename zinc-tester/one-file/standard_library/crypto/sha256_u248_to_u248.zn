//! { "cases": [ {
//!     "case": "default",
//!     "input": {
//!         "preimage": "42"
//!     },
//!     "output": "65258141722884530808301515418266180114263657401739173868432317015144727262"
//! } ] }

use std::array::truncate;
use std::convert;
use std::crypto::sha256;

fn main(preimage: u248) -> u248 {
    let preimage_bits = convert::to_bits(preimage);
    let digest_bits = sha256(preimage_bits);
    let truncated_bits = truncate(digest_bits, 248);

    convert::from_bits_unsigned(truncated_bits)
}
